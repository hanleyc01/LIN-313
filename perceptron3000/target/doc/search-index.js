var searchIndex = JSON.parse('{\
"perceptron3000":{"doc":"","t":[17,17,3,3,12,11,11,11,11,12,11,11,12,11,11,5,12,11,11,11,11,11,11,11,11,12,12],"n":["MAGIC","NUMBER","Node","Ppm","bias","borrow","borrow","borrow_mut","borrow_mut","contents","from","from","height","into","into","main","maxval","new","push","try_from","try_from","try_into","try_into","type_id","type_id","weights","width"],"q":["perceptron3000","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["First part of the “magic number” for the PPM file …","Second part of the “magic number” for the PPM file …","The distinct unit within our neural network; has three …","The file format our simple neural network will work with.","","","","","","Vector containing the contents of the PPM as bytes","Returns the argument unchanged.","Returns the argument unchanged.","Height of the raster ","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Maximum value contained in each cell","Initializes a new Ppm with the provided height, width, and …","Pushes a new “byte” into our PPM vector. Importantly, …","","","","","","","","Width of the raster"],"i":[0,0,0,0,1,1,2,1,2,2,1,2,2,1,2,0,2,2,2,1,2,1,2,1,2,1,2],"f":[null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[]],[[]],null,[[]],[[]],[[]],null,[[["u8",0],["u8",0],["u8",0]]],[[["",0],["u8",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null],"p":[[3,"Node"],[3,"Ppm"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};